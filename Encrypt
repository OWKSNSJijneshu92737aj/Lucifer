for i, bot in pairs(getBots()) do
    if getBot().name:upper() == bot.name:upper() then
        pcallBot = i
    end
end

botAction = {}
initialize = {}
static = {}
credentials = {}
reversed = 1
local customizable = {
    seed = block + 1,
    variableBlock = 1,
    variableWorld = 1,
    variableSeed = 1,
    variablePack = 1,
    variableBackup = 1,
    formatTime = os.time(),
    tileGaiaX = 0,
    tileGaiaY = 0,
    tileUtX = 0,
    tileUtY = 0,
    seedX = dropseedX - 1,
    seedY = dropseedY - 1,
    packX = droppackX - 1,
    packY = droppackY - 1,
    barisX = posbarisX - 1,
    barisY = posbarisY - 1,
    tileSeed = 0,
    tilePack = 0,
    tileY = 0,
    except = {18, 32, 6336, 9640, block,seed},
    away = {12,30,686,858,886,1040,1294,1684}
}

customizable.put = function(id,ex,ye)
    getBot():place(getBot().x+ex,getBot().y+ye,id)
end

customizable.hit = function(ex,ye)
    getBot():hit(getBot().x+ex,getBot().y+ye)
end

if customizable.tileY == 0 then
    if pnbmode == "up" then
        customizable.tileY = -2
    elseif pnbmode == "down" then
        customizable.tileY = 2
    end
end

for x = math.floor(pnbtile/2),1,-1 do
    x = x * -1
    table.insert(botAction,x)
end

for x = 0, math.ceil(pnbtile/2) - 1 do
    table.insert(botAction,x)
end

if pcallBot then
    getBot().legit_mode = false
    getBot().auto_reconnect = false
    for i =  1,worldPerbotPnb do
        table.insert(static,customWorldPnb[math.floor((pcallBot - 1) * worldPerbotPnb + i)])
    end
    for i =  1,botperswitch do
        table.insert(credentials,botSwitch[math.floor((pcallBot - 1) * botperswitch + i)])
    end
    for idx, val in pairs(packList) do
        table.insert(customizable.except,val)
    end
    if botRest then
        getBot().auto_rest_mode = true
        getBot().rest_time = botRestTime
        getBot().rest_interval = botRestInterval
        if disconnectOnRest then
            getBot().disconnect_on_rest = true
        end
    end
end

customizable.split = function(str, ptr)
    if not ptr then 
        ptr = "%s"
    end
    local tbl = {}
    for string in string.gmatch(str, ptr) do
        table.insert(tbl, string) 
    end
    return tbl
end

customizable.punchitem = function(x,y)
    for _,idx in pairs(botAction) do
        if getTile(x + idx,y + customizable.tileY).fg ~= 0 or getTile(x + idx,y + customizable.tileY).bg ~= 0 then
            return true
        end
    end
    return false
end

customizable.placeitem = function(x,y)
    for _,idx in pairs(botAction) do
        if getTile(x + idx,y + customizable.tileY).fg == 0 and getTile(x+idx,y + customizable.tileY).bg == 0 then
            return true
        end
    end
    return false
end

customizable.wordsrandom = function()
    if sayingrandomwords then
        local random = {
            "Cuma senyuman doang, udah bikin gemes.",
            "Bentar lagi uda jarang ni lu nongkrong di sini.",
            "Kita ngapain sih, ikut-ikutan heboh?",
            "Gue tuh selalu berusaha baik, tapi gimana ya.",
            "Gak usah diambil pusing, santai aja dulu.",
            "Jangan sok asik, tuh keliatan banget.",
            "Santai aja dulu, gak usah tegang.",
            "Jangan bawa drama-dramaan, capek.",
            "Gak usah dibawa serius, nanti malah stress.",
            "Gue tuh kalem, gak usah ribut.",
            "Lagi asik nongkrong, ada yang ngomongin.",
            "Buat apa pake jaim-jaim, santai aja.",
            "Lagi asik main game, tiba-tiba ada yang gangguin.",
            "Gak usah sok asik, keliatan banget.",
            "Nggak perlu pake baper, gak ada gunanya.",
            "Gue gak peduliin, tinggalin aja.",
            "Santai aja dulu, gak usah terlalu serius.",
            "Nggak usah diambil pusing, biar enak.",
            "Hati-hati, banyak orang munafik.",
            "Lagi pada heboh semua, bikin geger.",
            "Gak usah pake jaim-jaim, santai aja.",
            "Lagi dengerin lagu enak, bawaannya pengen joget.",
            "Nih, lagi pada rame-rame di tempat baru.",
            "Gue tuh kalem, gak perlu ribut.",
            "Udah capek-capek ngomong, gak dengerin juga.",
            "Asik banget nih, liburan seru.",
            "Gak usah sok asik, keliatan banget.",
            "Bentar lagi weekend, pasti seru banget nih.",
            "Cuma bisa doa aja, gimana lagi.",
            "Lagi asik main, ada yang gangguin.",
            "Gue gak peduliin, tinggalin aja.",
            "Lagi mikirin, gak usah bener-bener serius.",
            "Jangan dibawa serius, nanti malah stress.",
            "Kondisi lagi kacau, gak karuan banget.",
            "Nih, jualan makanan enak banget di sini.",
        }
        local text = math.random(1, #random)
        local str = random[text]
        getBot():say(str)
        sleep(2000)
    end
end

customizable.itemcheck = function(tbl, int)
    for _,num in pairs(tbl) do
        if num == int then
            return true
        end
    end
    return false
end

customizable.recycles = function()
    for _, item in pairs(getBot():getInventory():getItems()) do
        if not customizable.itemcheck(customizable.except,item.id) and not customizable.itemcheck(whitelistItem,item.id) then
            getBot():trash(item.id, getBot():getInventory():getItemCount(item.id))
            sleep(250)
        end
    end
end

customizable.itemFloat = function(id)
    return getBot():getWorld().growscan:getObjects()[id] or 0
end

customizable.getEnetBot = function()
    str = ""
    for idx, enet in pairs(getBots()) do
        if enet.status == BotStatus.online then
            init = "Online"
        elseif enet.status == BotStatus.account_banned  then
            init = "Suspended"
        elseif enet.status == BotStatus.error_connecting  then
            init = "Ercon"
        else
            init = "Disconnect"
        end
        str = str.."\n"..init.."" 
    end
    return str
end

customizable.botstatus = function()
    str = ""
    for _, val in pairs(getBots()) do
        str = str.."\n["..val.level.."]||"..string.upper(val.name).."||" 
    end
    return str
end

customizable.botworld = function()
    str = ""
    for _, val in pairs(getBots()) do
        str = str.."\n||"..string.upper(val:getWorld().name).."||" 
    end
    return str
end

customizable.blockstorage = function()
    str = ""
	for i = 1, #storageblock do
        str = str.."\n||"..string.upper(storageblock[i]).."|| : "..(initialize[storageblock[i]] or "?")..""
    end
    return str
end

customizable.seedstorage = function()
    str = ""
	for i = 1, #storageseed do
        str = str.."\n||"..string.upper(storageseed[i]).."|| : "..(initialize[storageseed[i]] or "?")..""
    end
    return str
end

customizable.packstorage = function()
    str = ""
	for i = 1, #storagepack do
        str = str.."\n||"..string.upper(storagepack[i]).."|| : "..(initialize[storagepack[i]] or "?")..""
    end
    return str
end

customizable.writeFile = function(info,text)
    local file = io.open(""..info..".txt","a")
    file:write(text.."\n")
    file:close()
end

customizable.botgems = function()
    local count = 0
    for _,bot in pairs(getBots()) do
        count = count + bot.gem_count
    end
    return count
end

customizable.botinfo = function(content)
	if webhookstatus then
		text = [[
			$webHookUrl = "]]..webhookstatuslink..[["
			$payload = @{
				content = "]]..content..[["
			}

            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType "application/json"
		]]
		local file = io.popen("powershell -command -", "w")
		file:write(text)
		file:close()
	end
end

customizable.webhookinfo = function()
	if botinfo then
        realtime = os.time() - customizable.formatTime
        local text = [[
            $webHookUrl = "]]..linkbotinfo..[[/messages/]]..messageidbotinfo..[["
            $payload = @{
                username = "Debra's"
                embeds = @(
                    @{
                        title = "Caramoy Syndicate : https://discord.com/invite/fTTKW8vvuq"
                        color = "]]..math.random(111111,999999)..[["
                        fields = @(
                            @{
                                name = ""
                                value = "]].."RUNTIME : "..math.floor(realtime/86400).." Days "..math.floor(realtime%86400/3600).." Hours "..math.floor(realtime%86400%3600/60).." Minutes"..[["
                                inline = "false"
                            }
                            @{
                                name = ""
                                value = "]].."TOTAL GEMS : "..customizable.botgems()..[["
                                inline = "false"
                            }
                            @{
                                name = "BOTNAME"
                                value = "]]..customizable.botstatus()..[["
                                inline = "true"
                            }
                            @{
                                name = "WORLD"
                                value = "]]..customizable.botworld()..[["
                                inline = "true"
                            }
                            @{
                                name = "STATUS"
                                value = "]]..customizable.getEnetBot()..[["
                                inline = "true"
                            }
                        )
                    }
                    @{
                        fields = @(
                            @{
                                name = "STORAGE BLOCK"
                                value = "]]..customizable.blockstorage()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE SEED"
                                value = "]]..customizable.seedstorage()..[["
                                inline = "true"
                            }
                            @{
                                name = "STORAGE PACK"
                                value = "]]..customizable.packstorage()..[["
                                inline = "true"
                            }
                        )
                        footer = @{
                            text = "[Lucifer] : PNB Script`nLast update : ]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[["
                        }
                    }
                )
            }
            
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
        ]]
        local pipe = io.popen("powershell -command -", "w")
        pipe:write(text)
        pipe:close()
    end
end

customizable.reconnect = function(world,id,x,y)
    if getBot():getPing() == 0 then
        getBot():disconnect()
        sleep(4000)
    end
    if not getBot():isInWorld(world:upper()) and getBot().status == BotStatus.online then 
        customizable.botinfo("("..getBot().name..") Not at currently world, trying to joining world again @everyone")
        local count = 0
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
            if not getBot():isInWorld(world:upper()) then 
                count = count + 1
                if count > 5 then
                    customizable.botinfo("("..getBot().name..") Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stuck > 3 then
                    customizable.botinfo("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botinfo("("..getBot().name..") success to joining world @everyone")
    end
    if getBot().status ~= BotStatus.online then
        customizable.botinfo("("..getBot().name..") status is offline @everyone")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                customizable.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                getBot():stopScript()
            end
        end
        local count = 0
        while not getBot():isInWorld(world:upper()) do
            getBot():sendPacket(3,"action|join_request\nname|"..world:upper().."\ninvitedWorld|0")
            sleep(delaywarp)
            if not getBot():isInWorld(world:upper()) then 
                count = count + 1
                if count > 5 then
                    customizable.botinfo("("..getBot().name..") Failed to joining world again, terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if id ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 do
                getBot():sendPacket(3,"action|join_request\nname|" ..world:upper().."|"..id:upper().."\ninvitedWorld|0")
                sleep(delaywarp)
                if stuck > 3 then
                    customizable.botinfo("("..getBot().name..") Failed to reconnecting bot, stuck at white door. Terminated script @everyone")
                    getBot():stopScript()
                end
            end
        end
        if x and y then
            while getBot().x ~= x or getBot().y ~= y do
                getBot():findPath(x,y)
                sleep(150)
            end
        end
        customizable.botinfo("("..getBot().name..") status is online @everyone")
    end
end

customizable.warp = function(world,door,cooldown)
    name = world
    if door ~= "" then
        name = name .. "|" ..door
    end
    if not getBot():isInWorld(world:upper()) then
        addEvent(Event.variantlist, function(variant, netid)
            if variant:get(0):getString() == "OnConsoleMessage" then
                if variant:get(1):getString():lower():find("inaccessible.") then
                    nuked = true
                end
                if variant:get(1):getString():lower():find("experiencing ") then
                    subserver = true
                end
            end
        end)
        while not getBot():isInWorld(world:upper()) and not nuked and not subserver do
            if getBot():getPing() == 0 then
                getBot():disconnect()
                sleep(2000)
            end
            if getBot().status ~= BotStatus.online then
                customizable.botinfo("("..getBot().name..") status is offline @everyone")
                while getBot().status ~= BotStatus.online do
                    getBot():connect()
                    sleep(delayreconnect)
                    if getBot().status == BotStatus.account_banned then
                        customizable.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                        getBot():stopScript()
                    end
                end
                customizable.botinfo("("..getBot().name..") status is online @everyone")
            end
            getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
            listenEvents(8)
            sleep(cooldown)
        end
        removeEvents()
        sleep(2000)
    end
    if getBot():isInWorld(world:upper()) then
        if door ~= "" then
            local stuck = 0
            while getTile(getBot().x,getBot().y).fg == 6 and not wrong do
                if getBot():getPing() == 0 then
                    getBot():disconnect()
                    sleep(4000)
                end
                if getBot().status ~= BotStatus.online then
                    customizable.botinfo("("..getBot().name..") status is offline @everyone")
                    while getBot().status ~= BotStatus.online do
                        getBot():connect()
                        sleep(delayreconnect)
                        if getBot().status == BotStatus.account_banned then
                            customizable.botinfo("("..getBot().name..") status is suspended, removing bot @everyone")
                            getBot():stopScript()
                        end
                    end
                    customizable.botinfo("("..getBot().name..") status is online @everyone")
                end
                getBot():sendPacket(3,"action|join_request\nname|"..name.."\ninvitedWorld|0")
                sleep(cooldown)
                stuck = stuck + 1
                if stuck == 5 then
                    wrong = true
                end
            end
        end
        for i, tile in pairs(getBot():getWorld():getTiles()) do
            if tile:hasFlag(4096) then
                fire = true
            end
        end
    end
end

customizable.takepickaxe = function()
    ::back::
    world = customizable.split(worldpickaxe[reversed],"[^:]+")[1]
    door = customizable.split(worldpickaxe[reversed],"[^:]+")[2]
    customizable.warp(world,door,delaywarp)
    if not subserver then
        if not nuked then
            if not wrong then
                if getBot():getInventory():getItemCount(98) == 0 then
                    for _, obj in pairs(getBot():getWorld():getObjects()) do
                        if obj.id == 98 then
                            getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                            sleep(1000)
                            getBot():collect(2)
                            sleep(1000)
                            customizable.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
                        end
                        if getBot():getInventory():getItemCount(98) > 0  then
                            break
                        end
                    end
                    if getBot():getInventory():getItemCount(98) > 0  then
                        getBot():moveTo(1,0)
                        sleep(1000)
                        getBot():setDirection(true)
                        getBot():wear(98)
                        sleep(1000)
                        getBot():drop(98,getBot():getInventory():getItemCount(98) - 1)
                        sleep(1000)
                    end
                end
            else
                wrong = false
                print("["..pcallBot.."]Id door world pickaxe is wrong, check ur id door !!")
                customizable.botinfo("Id door world pickaxe is wrong, check ur id door !, terminated script @everyone")
                getBot():stopScript()
            end
        else
            nuked = false
            print("["..pcallBot.."]World pickaxe is nuked, check ur world !!")
            customizable.botinfo("World pickaxe is nuked, check ur world !, terminated script @everyone")
            getBot():stopScript()
        end
    else
        subserver = false
        print("["..pcallBot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
        customizable.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
        sleep(120000)
        goto back
    end
end

customizable.buying = function()
    print("["..pcallBot.."]Buying packs")
    if upbackpack then
        while getBot():getInventory().slotcount < 36 do
            getBot():sendPacket(2,"action|buy\nitem|upgrade_backpack")
            sleep(1000)
        end
    end
    while getBot().gem_count >= pricepack do
        getBot():sendPacket(2,"action|buy\nitem|"..debug)
        sleep(1000)
        if getBot():getInventory():getItemCount(packList[1]) >= 200 then
            break
        end
    end
end

customizable.storingpacks = function()
    print("["..pcallBot.."]Dropping packs")
    for i = customizable.variablePack , #storagepack do
        world = storagepack[i]
        customizable.warp(world,doorstoragepack,delaywarp)
        customizable.webhookinfo()
        ::backs::
        if not subserver then
            if not nuked then
                if not wrong then
                    if customizable.itemFloat(packList[1]) >= limitpack then
                        initialize[world] = ""..customizable.itemFloat(packList[1]).."x (LIMIT)"
                        customizable.botinfo("Packs storage : ("..world..") has reached limit, skipped world @everyone")
                        print("["..pcallBot.."]Packs storage : ("..world..") has reached limit, skipped world")
                        customizable.variablePack = customizable.variablePack + 1
                        if customizable.variablePack > #storagepack then
                            initialize[world] = ""..customizable.itemFloat(packList[1]).."x (LIMIT)"
                            customizable.botinfo("All packs storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                            print("["..pcallBot.."]All packs storage has reached limit, Removing bot : ("..getBot().name..")")
                            customizable.webhookinfo()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                        customizable.tilePack = 0
                    else
                        for y,pack in pairs(packList) do
                            for i,tile in pairs(getBot():getWorld():getTiles()) do
                                if separated then
                                    if tile.fg == 0 or tile.bg == 0 then
                                        ::back::
                                        getBot():findPath(customizable.packX + (customizable.tilePack),customizable.packY - (y-1))
                                        sleep(1000)
                                        local count = 0
                                        customizable.reconnect(world,doorstoragepack,customizable.packX + (customizable.tilePack),customizable.packY - (y-1))
                                        if customizable.packX + (customizable.tilePack) >= 98 then
                                            customizable.packY = customizable.packY - 1
                                            customizable.tilePack = 0
                                        end
                                        getBot():setDirection(false)
                                        while getBot():getInventory():getItemCount(pack) > 0 do
                                            getBot():drop(pack,200)
                                            sleep(delaydrop)
                                            customizable.reconnect(world,doorstoragepack,customizable.packX + (customizable.tilePack),customizable.packY - (y-1))
                                            count = count + 1
                                            if count >= 2 then
                                                customizable.tilePack = customizable.tilePack + 1
                                                goto back
                                            end
                                        end
                                    end
                                    if getBot():getInventory():getItemCount(pack) == 0 then
                                        break
                                    end
                                else
                                    if tile.fg == 0 or tile.bg == 0 then
                                        ::back::
                                        getBot():findPath(customizable.packX + (customizable.tilePack),customizable.packY)
                                        sleep(1000)
                                        local count = 0
                                        customizable.reconnect(world,doorstoragepack,customizable.packX + (customizable.tilePack),customizable.packY)
                                        if customizable.packX + (customizable.tilePack) >= 98 then
                                            customizable.packY = customizable.packY - 1
                                            customizable.tilePack = 0
                                        end
                                        getBot():setDirection(false)
                                        while getBot():getInventory():getItemCount(pack) > 0 do
                                            getBot():drop(pack,200)
                                            sleep(delaydrop)
                                            customizable.reconnect(world,doorstoragepack,customizable.packX + (customizable.tilePack),customizable.packY)
                                            count = count + 1
                                            if count >= 2 then
                                                customizable.tilePack = customizable.tilePack + 1
                                                goto back
                                            end
                                        end
                                    end
                                    if getBot():getInventory():getItemCount(pack) == 0 then
                                        break
                                    end
                                end
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    initialize[world] = "WRONG DOOR"
                    wrong = false
                    print("["..pcallBot.."]("..world..") Id door packs storage is wrong, check ur id door!")
                    customizable.botinfo("("..world..") Id door packs storage is wrong, check ur id door! @everyone")
                    customizable.variablePack = customizable.variablePack + 1
                    if customizable.variablePack > #storagepack then
                        print("["..pcallBot.."]All packs storage has reached limit")
                        customizable.botinfo("All packs storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.tilePack = 0
                end
            else
                initialize[world] = "NUKED"
                nuked = false
                print("["..pcallBot.."]("..world..") packs Storage is NUKED, check ur storage!")
                customizable.botinfo("("..world..") packs Storage is NUKED, check ur storage! @everyone")
                customizable.variablePack = customizable.variablePack + 1
                if customizable.variablePack > #storagepack then
                    print("["..pcallBot.."]All packs storage has reached limit!")
                    customizable.botinfo("All packs storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.tilePack = 0
            end
        else
            subserver = false
            print("["..pcallBot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            customizable.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            customizable.reconnect(world,doorstoragepack)
            goto backs
        end
    end
    initialize[world] = ""..customizable.itemFloat(packList[1]).."x"
end

customizable.storingseeds = function()
    print("["..pcallBot.."]Dropping seeds")
    for i = customizable.variableSeed , #storageseed do
        world = storageseed[i]
        customizable.warp(world,doorstorageseed,delaywarp)
        customizable.webhookinfo()
        ::backs::
        if not subserver then
            if not nuked then
                if not wrong then
                    if customizable.itemFloat(customizable.seed) >= limitseed then
                        initialize[world] = ""..customizable.itemFloat(customizable.seed).."x (LIMIT)"
                        customizable.botinfo("Seeds storage : ("..world..") has reached limit, skipped world @everyone")
                        print("["..pcallBot.."]Seeds storage : ("..world..") has reached limit, skipped world")
                        customizable.variableSeed = customizable.variableSeed + 1
                        if customizable.variableSeed > #storageseed then
                            initialize[world] = ""..customizable.itemFloat(customizable.seed).."x (LIMIT)"
                            customizable.botinfo("All seeds storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                            print("["..pcallBot.."]All seeds storage has reached limit, Removing bot : ("..getBot().name..") @everyone")
                            customizable.webhookinfo()
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            getBot():stopScript()
                        end
                        customizable.tileSeed = 0
                    else
                        for i,tile in pairs(getBot():getWorld():getTiles()) do
                            if tile.fg == 0 or tile.bg == 0 then
                                ::back::
                                getBot():findPath(customizable.seedX + (customizable.tileSeed),customizable.seedY)
                                sleep(1000)
                                local count = 0
                                customizable.reconnect(world,doorstorageseed,customizable.seedX + (customizable.tileSeed),customizable.seedY)
                                if customizable.seedX + (customizable.tileSeed) >= 98 then
                                    customizable.seedY = customizable.seedY - 1
                                    customizable.tileSeed = 0
                                end
                                getBot():setDirection(false)
                                while getBot():getInventory():getItemCount(customizable.seed) > 0 do
                                    getBot():drop(customizable.seed,200)
                                    sleep(delaydrop)
                                    customizable.reconnect(world,doorstorageseed,customizable.seedX + (customizable.tileSeed),customizable.seedY)
                                    count = count + 1
                                    if count >= 2 then
                                        customizable.tileSeed = customizable.tileSeed + 1
                                        goto back
                                    end
                                end
                            end
                            if getBot():getInventory():getItemCount(customizable.seed) == 0 then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    initialize[world] = "WRONG DOOR"
                    wrong = false
                    print("["..pcallBot.."]("..world..") Id door seeds storage is wrong, check ur id door!")
                    customizable.botinfo("("..world..") Id door seeds storage is wrong, check ur id door! @everyone")
                    customizable.variableSeed = customizable.variableSeed + 1
                    if customizable.variableSeed > #storageseed then
                        print("["..pcallBot.."]All seeds storage has reached limit")
                        customizable.botinfo("All seeds storage has reached limit @everyone")
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                    customizable.tileSeed = 0
                end
            else
                initialize[world] = "NUKED"
                nuked = false
                print("["..pcallBot.."]("..world..") seeds Storage is NUKED, check ur storage!")
                customizable.botinfo("("..world..") seeds Storage is NUKED, check ur storage! @everyone")
                customizable.variableSeed = customizable.variableSeed + 1
                if customizable.variableSeed > #storageseed then
                    print("["..pcallBot.."]All seeds storage has reached limit!")
                    customizable.botinfo("All seeds storage has reached limit! @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                customizable.tileSeed = 0
            end
        else
            subserver = false
            print("["..pcallBot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            customizable.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            customizable.reconnect(world,doorstorageseed)
            goto backs
        end
    end
    initialize[world] = ""..customizable.itemFloat(customizable.seed).."x"
end

customizable.take = function()
    for i = customizable.variableBlock, #storageblock do
        print("["..pcallBot.."]Take blocks")
		world = storageblock[i]
        customizable.warp(world,doorstorageblock,delaywarp)
        customizable.webhookinfo()
        ::backs::
        if not subserver then
            if not nuked then
                if not wrong then
                    if customizable.itemFloat(block) == 0 then
                        initialize[world] = ""..customizable.itemFloat(block).."x (EMPTY)"
                        customizable.botinfo("Take blocks storage : ("..world..") has empty, skipped world @everyone")
                        print("["..pcallBot.."]Take blocks storage : ("..world..") has empty, skipped world")
                        customizable.variableBlock = customizable.variableBlock + 1
                        if customizable.variableBlock > #storageblock then
                            initialize[world] = ""..customizable.itemFloat(block).."x (EMPTY)"
                            customizable.botinfo("All take blocks storage has empty, Removing bot : ("..getBot().name..") @everyone")
                            print("["..pcallBot.."]All take blocks storage has empty, Removing bot : ("..getBot().name..")")
                            customizable.storingseeds()
                            customizable.warp(customizable.randomletter(),"",delaywarp)   
                            if removingbot then
                                removeBot()
                                sleep(2000)
                            end
                            print("["..pcallBot.."]Blocks empty")
                            getBot():stopScript()
                        end
                    else
                        for _, object in pairs(getBot():getWorld():getObjects()) do
                            if object.id == block then
                                getBot():findPath(math.floor((object.x)/32), math.floor((object.y)/32))
                                sleep(1000)
                                getBot():collect(2)
                                sleep(1000)
                                customizable.reconnect(world,doorstorageblock,math.floor((object.x)/32), math.floor((object.y)/32))
                            end
                            if getBot():getInventory():getItemCount(block) >= pnbtile then
                                break
                            end
                        end
                        sleep(100)
                        break
                    end
                else
                    initialize[world] = "WRONG DOOR"
                    wrong = false
                    print("["..pcallBot.."]("..world..") Id door Take blocks storage is wrong, check ur id door!")
                    customizable.botinfo("("..world..") Id door Take blocks storage is wrong, check ur id door! @everyone")
                    customizable.variableBlock = customizable.variableBlock + 1
                    if customizable.variableBlock > #storageblock then
                        print("["..pcallBot.."]All Take blocks storage has reached limit")
                        customizable.botinfo("All Take blocks storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                        if removingbot then
                            removeBot()
                            sleep(2000)
                        end
                        getBot():stopScript()
                    end
                end
            else
                initialize[world] = "NUKED"
                nuked = false
                print("["..pcallBot.."]("..world..") take blocks Storage is NUKED, check ur storage!")
                customizable.botinfo("("..world..") take blocks Storage is NUKED, check ur storage! @everyone")
                customizable.variableBlock = customizable.variableBlock + 1
                if customizable.variableBlock > #storageblock then
                    print("["..pcallBot.."]All take blocks storage has reached limit!")
                    customizable.botinfo("All take blocks storage has reached limit! Removing bot : ("..getBot().name..") @everyone")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
            end
        else
            subserver = false
            print("["..pcallBot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            customizable.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            customizable.reconnect(world,doorstorageblock)
            goto backs
        end
    end
    initialize[world] = ""..customizable.itemFloat(block).."x"
    customizable.line()
end

customizable.cekdoor = function()
    for val, idx in ipairs(customizable.away) do
        if getTile(getBot().x,getBot().y).fg == idx then
            return true
        end
    end
    return false
end

customizable.line = function()
    customizable.param = 0
    ::back::
    print("["..pcallBot.."]Set up Line")
    if not pnbother then
        world = customizable.split(worldpnb[reversed],"[^:]+")[1]
        door = customizable.split(worldpnb[reversed],"[^:]+")[2]
        customizable.warp(world,door,delaywarp)
        customizable.webhookinfo()
        ::backs::
        if not subserver then
            if not nuked then
                if not wrong then
                    if not withgaut then
                        if pnbtile == 1 then
                            customizable.botline = pnbtile + 3
                            for _,tile in pairs(getBot():getWorld():getTiles()) do
                                for idx,bot in pairs(getBots()) do
                                    if bot.name == getBot().name then
                                        getBot():findPath(customizable.barisX - customizable.param,customizable.barisY)
                                        sleep(1000)
                                        customizable.reconnect(world,door,customizable.barisX,customizable.barisY)
                                        break
                                    else
                                        customizable.param = customizable.param + customizable.botline
                                    end
                                end
                                break
                            end
                        else
                            customizable.botline = pnbtile + 1
                            for _,tile in pairs(getBot():getWorld():getTiles()) do
                                for idx,bot in pairs(getBots()) do
                                    if bot.name == getBot().name then
                                        getBot():findPath(customizable.barisX - customizable.param,customizable.barisY)
                                        sleep(1000)
                                        customizable.reconnect(world,door,customizable.barisX,customizable.barisY)
                                        break
                                    else
                                        customizable.param = customizable.param + customizable.botline
                                    end
                                end
                                break
                            end
                        end
                    else
                        customizable.botline = pnbtile
                        for _,tile in pairs(getBot():getWorld():getTiles()) do
                            for idx,bot in pairs(getBots()) do
                                if bot.name == getBot().name then
                                    getBot():findPath(customizable.barisX - customizable.param,customizable.barisY)
                                    sleep(1000)
                                    customizable.reconnect(world,door,customizable.barisX,customizable.barisY)
                                    break
                                else
                                    customizable.param = customizable.param + customizable.botline
                                end
                            end
                            break
                        end
                    end
                else
                    wrong = false
                    customizable.botinfo("World pnb : ("..world..") is Wrong door, terminated script @everyone")
                    print("["..pcallBot.."]World pnb : ("..world..") is Wrong door, terminated script")
                    getBot():stopScript()
                end
            else
                nuked = false
                customizable.botinfo("World pnb : ("..world..") is NUKED @everyone")
                print("["..pcallBot.."]World pnb : ("..world..") is NUKED, terminated script")
                getBot():stopScript()
            end
        else
            subserver = false
            print("["..pcallBot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
            customizable.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
            sleep(120000)
            customizable.reconnect(world,door)
            goto backs
        end
        if changeSkin then
            getBot():setSkin(math.random(1, 6))
            sleep(1000)
        end
        customizable.wordsrandom()
        customizable.pnb(world,door)
        if customizable.itemFloat(112) >= limitgems then
            if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                customizable.storingseeds()
            end
            customizable.warp(customizable.randomletter(),"",5000)
            if removingbot then
                customizable.botinfo("Gems at world pnb has reached limit")
                print("["..pcallBot.."]Gems at world pnb has reached limit")
                removeBot()
                sleep(2000)
            end
            getBot():stopScript()
        end
    else
        print("["..pcallBot.."]Pnb")
        for i = customizable.variableWorld, #static do
            list = static[i]
            customizable.warp(list,doorWorldPnb,delaywarp)
            customizable.webhookinfo()
            ::backs::
            if not subserver then
                if not nuked then
                    if not wrong then
                        while not getBot():isInTile(customBreakX,customBreakY) do
                            getBot():findPath(customBreakX,customBreakY)
                            sleep(500)
                            customizable.reconnect(list,doorWorldPnb,customBreakX,customBreakY)
                        end
                        if changeSkin then
                            getBot():setSkin(math.random(1, 6))
                            sleep(1000)
                        end    
                        customizable.wordsrandom()
                        ::changed::
                        if pnbtile == 1 then
                            while getBot():getInventory():getItemCount(block) >= pnbtile do
                                if getTile(getBot().x,getBot().y + customizable.tileY).bg ~= 0 or getTile(getBot().x, getBot().y + customizable.tileY).fg ~= 0 then
                                    customizable.hit(0,customizable.tileY)
                                    sleep(delaypunch)
                                    customizable.reconnect(list,doorWorldPnb,customBreakX,customBreakY)
                                end
                                if getTile(getBot().x,getBot().y + customizable.tileY).bg == 0 or getTile(getBot().x, getBot().y + customizable.tileY).fg == 0 then
                                    customizable.put(block,0,customizable.tileY)
                                    sleep(delayplace)
                                    customizable.reconnect(list,doorWorldPnb,customBreakX,customBreakY)
                                end
                                sleep(320)
                                getBot():collect(5)
                                sleep(30)
                                if customizable.cekdoor() then
                                    getBot():disconnect()
                                    sleep(4000)
                                    customizable.reconnect(list,doorWorldPnb)
                                    goto backs
                                end
                                if autoSwitch and getBot().level >= switchOnLevel then
                                    if getBot():getInventory():getItemCount(block) >= pnbtile then
                                        goto changed
                                    end
                                    if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                                        customizable.storingseeds()
                                    end
                                    customizable.backupacc()
                                    if takepickaxe then
                                        while getBot():getInventory():getItemCount(98) == 0 do
                                            customizable.takepickaxe()
                                            sleep(6000)
                                        end
                                    end
                                    customizable.mainscript()
                                end
                                if getBot():getInventory():getItemCount(customizable.seed) >= amountseed then
                                    customizable.storingseeds()
                                    goto back
                                elseif getBot().gem_count >= mingems and buypack then
                                    customizable.buying()
                                    customizable.storingpacks()
                                    goto back
                                end
                            end
                        else
                            while getBot():getInventory():getItemCount(block) >= pnbtile do
                                while customizable.placeitem(getBot().x,getBot().y) do
                                    for _,i in pairs(botAction) do
                                        if getTile(getBot().x + i,getBot().y + customizable.tileY).fg == 0 and getTile(getBot().x + i,getBot().y + customizable.tileY).bg == 0 then
                                            customizable.put(block,i,customizable.tileY)
                                            sleep(delayplace)
                                            customizable.reconnect(list,doorWorldPnb,customBreakX,customBreakY)
                                        end
                                    end
                                end
                                while customizable.punchitem(getBot().x,getBot().y) do
                                    for _,i in pairs(botAction) do
                                        if getTile(getBot().x + i,getBot().y + customizable.tileY).fg ~= 0 or getTile(getBot().x + i,getBot().y + customizable.tileY).bg ~= 0 then
                                            customizable.hit(i,customizable.tileY)
                                            sleep(delaypunch)
                                            customizable.reconnect(list,doorWorldPnb,customBreakX,customBreakY)
                                        end
                                    end
                                end
                                sleep(320)
                                getBot():collect(5)
                                sleep(30)
                                if customizable.cekdoor() then
                                    getBot():disconnect()
                                    sleep(4000)
                                    customizable.reconnect(list,doorWorldPnb)
                                    goto backs
                                end
                                if autoSwitch and getBot().level >= switchOnLevel then
                                    if getBot():getInventory():getItemCount(block) >= pnbtile then
                                        goto changed
                                    end
                                    if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                                        customizable.storingseeds()
                                    end
                                    customizable.backupacc()
                                    if takepickaxe then
                                        while getBot():getInventory():getItemCount(98) == 0 do
                                            customizable.takepickaxe()
                                            sleep(6000)
                                        end
                                    end
                                    customizable.mainscript()
                                end
                                if getBot():getInventory():getItemCount(customizable.seed) >= amountseed then
                                    customizable.storingseeds()
                                    goto back
                                elseif getBot().gem_count >= mingems and buypack then
                                    customizable.buying()
                                    customizable.storingpacks()
                                    goto back
                                end
                            end
                        end
                    else
                        wrong = false
                        print("World PNB : "..list.." is Wrong")
                        customizable.botinfo("World PNB : "..list.." is Wrong")
                    end
                else
                    nuked = false
                    print("World PNB : "..list.." is NUKED!, check ur world !!")
                    customizable.botinfo("World PNB : "..list.." is NUKED!, check ur world !! @everyone")
                    customizable.variableWorld = customizable.variableWorld + 1
                    if customizable.variableWorld > #static then
                        customizable.variableWorld = 1
                    end
                end
            else
                subserver = false
                print("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
                customizable.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
                sleep(120000)
                customizable.reconnect(list,doorWorldPnb)
                goto backs
            end
            customizable.variableWorld = customizable.variableWorld + 1
            if customizable.variableWorld > #static then
                customizable.variableWorld = 1
            end
            break
        end
    end
    customizable.recycles()
    if not withgaut then
        if storeseedafterpnb then
            customizable.storingseeds()
            customizable.take()
        else
            customizable.take()
        end
    else
        world = customizable.split(worldpnb[reversed],"[^:]+")[1]
        door = customizable.split(worldpnb[reversed],"[^:]+")[2]
        for _, obj in pairs(getBot():getWorld():getObjects()) do
            if obj.id == seed then
                getBot():findPath(math.floor(obj.x / 32),math.floor(obj.y / 32))
                sleep(1000)
                getBot()collect(2)
                sleep(1000)
                customizable.reconnect(world,door,math.floor(obj.x / 32),math.floor(obj.y / 32))
            end
        end
        if getBot():getInventory():getItemCount(customizable.seed) > 0 then
            customizable.storingseeds()
            customizable.take()
        else
            customizable.take()
        end
    end
end

customizable.pnb = function(name,id)
    ::changed::
    if pnbtile == 1 then
        while getBot():getInventory():getItemCount(block) >= pnbtile do
            if getTile(getBot().x,getBot().y + customizable.tileY).bg ~= 0 or getTile(getBot().x, getBot().y + customizable.tileY).fg ~= 0 then
                customizable.hit(0,customizable.tileY)
                sleep(delaypunch)
                customizable.reconnect(name,id,getBot().x,getBot().y)
            end
            if getTile(getBot().x,getBot().y + customizable.tileY).bg == 0 or getTile(getBot().x, getBot().y + customizable.tileY).fg == 0 then
                customizable.put(block,0,customizable.tileY)
                sleep(delayplace)
                customizable.reconnect(name,id,getBot().x,getBot().y)
            end
            if not withgaut then
                sleep(300)
                getBot():collect(2)
                sleep(30)
            end
            if customizable.cekdoor() then
                getBot():disconnect()
                sleep(4000)
                customizable.reconnect(list,doorWorldPnb)
                customizable.line()
            end
            if autoSwitch and getBot().level >= switchOnLevel then
                if getBot():getInventory():getItemCount(block) > 0 then
                    goto changed
                end
                if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                    customizable.storingseeds()
                end
                customizable.backupacc()
                if takepickaxe then
                    while getBot():getInventory():getItemCount(98) == 0 do
                        customizable.takepickaxe()
                        sleep(6000)
                    end
                end
                customizable.mainscript()
            end
            if getBot():getInventory():getItemCount(customizable.seed) >= amountseed then
                customizable.storingseeds()
                customizable.line()
            elseif getBot().gem_count >= mingems and buypack then
                customizable.buying()
                customizable.storingpacks()
                customizable.line()
            end
        end
    else
        while getBot():getInventory():getItemCount(block) >= pnbtile do
            while customizable.placeitem(getBot().x,getBot().y) do
                for _,i in pairs(botAction) do
                    if getTile(getBot().x + i,getBot().y + customizable.tileY).fg == 0 and getTile(getBot().x + i,getBot().y + customizable.tileY).bg == 0 then
                        customizable.put(block,i,customizable.tileY)
                        sleep(delayplace)
                        customizable.reconnect(name,id,getBot().x,getBot().y)
                    end
                end
            end
            while customizable.punchitem(getBot().x,getBot().y) do
                for _,i in pairs(botAction) do
                    if getTile(getBot().x + i,getBot().y + customizable.tileY).fg ~= 0 or getTile(getBot().x + i,getBot().y + customizable.tileY).bg ~= 0 then
                        customizable.hit(i,customizable.tileY)
                        sleep(delaypunch)
                        customizable.reconnect(name,id,getBot().x,getBot().y)
                    end
                end
            end
            if not withgaut then
                sleep(300)
                getBot():collect(5)
                sleep(30)
            end
            if customizable.cekdoor() then
                getBot():disconnect()
                sleep(4000)
                customizable.reconnect(list,doorWorldPnb)
                customizable.line()
            end
            if autoSwitch and getBot().level >= switchOnLevel then
                if getBot():getInventory():getItemCount(block) > 0 then
                    goto changed
                end
                if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                    customizable.storingseeds()
                end
                customizable.backupacc()
                if takepickaxe then
                    while getBot():getInventory():getItemCount(98) == 0 do
                        customizable.takepickaxe()
                        sleep(6000)
                    end
                end
                customizable.mainscript()
            end
            if getBot():getInventory():getItemCount(customizable.seed) >= amountseed then
                customizable.storingseeds()
                customizable.line()
            elseif getBot().gem_count >= mingems and buypack then
                customizable.buying()
                customizable.storingpacks()
                customizable.line()
            end
        end
    end
end

customizable.setposition = function()
    ::backs::
    world = customizable.split(worldpnb[reversed],"[^:]+")[1]
    door = customizable.split(worldpnb[reversed],"[^:]+")[2]
    print("["..pcallBot.."]Retrieve")
    customizable.warp(world,door,delaywarp)
    if not subserver then
        if not nuked then
            if not wrong then
                if pcallBot == 1 then
                    for i , tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 6948 then
                            getBot():findPath(tile.x,tile.y-1)
                            sleep(1000)
                            customizable.tileUtX = getBot().x
                            customizable.tileUtY = getBot().y
                            sleep(1000)
                        end
                    end
                elseif pcallBot == 2  then
                    for i, tile in pairs(getBot():getWorld():getTiles()) do
                        if tile.fg == 6946 then
                            getBot():findPath(tile.x,tile.y-1)
                            sleep(1000)
                            customizable.tileGaiaX = getBot().x
                            customizable.tileGaiaY = getBot().y
                            sleep(1000)
                        end
                    end
                end
            else
                wrong = false
                customizable.botinfo("World pnb : ("..world..") is Wrong door, terminated script @everyone")
                print("["..pcallBot.."]World pnb : ("..world..") is Wrong door, terminated script")
                getBot():stopScript()
            end
        else
            nuked = false
            customizable.botinfo("World pnb : ("..world..") is NUKED @everyone")
            print("["..pcallBot.."]World pnb : ("..world..") is NUKED, terminated script")
            getBot():stopScript()
        end
    else
        subserver = false
        print("["..pcallBot.."]Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes")
        customizable.botinfo("Bot : "..getBot().name.." system is sub-server, sleeping for 2 minutes @everyone")
        sleep(120000)
        goto backs
    end
end

customizable.storingretrieve = function()
    world = customizable.split(worldpnb[reversed],"[^:]+")[1]
    door = customizable.split(worldpnb[reversed],"[^:]+")[2]
    if pcallBot == 2 then
        for i, tile in pairs(getBot():getWorld():getTiles()) do
            if tile.fg == 6946 then
                getBot():findPath(tile.x,tile.y - 1)
                sleep(1000)
                customizable.reconnect(world,door,tile.x,tile.y - 1)
            end
            while getBot():getInventory():getItemCount(customizable.seed) > 0 do
                getBot():drop(customizable.seed,200)
                sleep(delaydrop)
                if getBot():getInventory():getItemCount(customizable.seed) > 0 then
                    getBot():moveTo(1,0)
                    sleep(100)
                end
                customizable.reconnect(world,door,tile.x,tile.y-1)
            end
        end
    elseif pcallBot == 1 then
        for i, tile in pairs(getBot():getWorld():getTiles()) do
            if tile.fg == 6948 then
                getBot():findPath(tile.x,tile.y - 1)
                sleep(1000)
                customizable.reconnect(world,door,tile.x,tile.y - 1)
            end
            while getBot():getInventory():getItemCount(block) > 0 do
                getBot():drop(block,200)
                sleep(delaydrop)
                if getBot():getInventory():getItemCount(block) > 0 then
                    getBot():moveTo(1,0)
                    sleep(100)
                end
                customizable.reconnect(world,door,tile.x,tile.y - 1)
            end
        end
    end
end

customizable.backupacc = function()
    customizable.botinfo("Bot : "..getBot().name.." reached max level, switching bot")
    ::back::
    for i = customizable.variableBackup, #credentials do
        thread = customizable.split(credentials[i],"([^|]+)")[1]
        threading = customizable.split(credentials[i],"([^|]+)")[2]
        if typeaccount == "normal" then
            getBot():updateBot(thread,threading)
            sleep(delayloginbot)
        elseif typeaccount == "guest" then
            getBot():updateBot(""..customizable.randomletter().."",thread,threading)
            sleep(delayloginbot)
        end
        getBot().auto_reconnect = false
        customizable.botinfo("Succes switching bot to : "..getBot().name.."")
        while getBot().status ~= BotStatus.online do
            getBot():connect()
            sleep(delayreconnect)
            if getBot().status == BotStatus.account_banned then
                customizable.writeFile("NextBotStatus","["..getBot().name.."] status is Suspended")
                customizable.variableBackup = customizable.variableBackup + 1
                if customizable.variableBackup > #credentials then
                    print("["..pcallBot.."]No more bots to switch, sc terminated")
                    if removingbot then
                        removeBot()
                        sleep(2000)
                    end
                    getBot():stopScript()
                end
                goto back
            end
        end
        if getBot().status == BotStatus.online and getBot().level < switchOnLevel then
            break
        elseif getBot().status == BotStatus.online and getBot().level >= switchOnLevel then
            customizable.variableBackup = customizable.variableBackup + 1
            if customizable.variableBackup > #credentials then
                print("["..pcallBot.."]No more bots to switch, sc terminated")
                if removingbot then
                    removeBot()
                    sleep(2000)
                end
                getBot():stopScript()
            end
            goto back
        end
    end
end

customizable.main = function()
    if typeaccount == "guest" then
        for i,bot in pairs(botList) do
            local derr = {}
            for id in bot:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(""..customizable.randomletter().."",x,y)
            sleep(delayloginbot)
        end
    elseif typeaccount == "normal" then
        for i,list in pairs(botList) do
            local derr = {}
            for id in list:gmatch("([^|]+)") do 
                table.insert(derr, id) 
            end
            x = derr[1]
            y = derr[2]
            addBot(x,y)
            sleep(delayloginbot)
        end
    end
    print("Please select all and re-execute script")
end

customizable.setauth = function()
    if not pcallBot and proxyServerDatabase then
        getProxyManager().custom_http_proxy = true
        getProxyManager().http_cooldown = delayDataBase
        if useDatabaseForMainProxy then
            getProxyManager().use_main_ip = true
        end
        if setDatabaseType == "http" then
            addDataProxy(proxyDatabase, Proxy.http) 
        elseif setDatabaseType == "https" then
            addDataProxy(proxyDatabase, Proxy.https)
        elseif setDatabaseType == "socks" then
            addDataProxy(proxyDatabase, Proxy.socks5)
        end
    end
    if not pcallBot and withproxy then
        getProxyManager():setLimit(botperproxy)
        for _, lists in pairs(proxyList) do
            getProxyManager():addProxy(lists)
        end
    end
end

customizable.htree = function(tree,amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for _,tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == tree then
            getBot():findPath(tile.x,tile.y)
            sleep(30)
            customizable.reconnect(param,"",tile.x,tile.y)
            while getBot():getWorld():getTile(tile.x,tile.y).fg ~= 0 do
                getBot():hit(tile.x,tile.y)
                sleep(200)
                customizable.reconnect(param,"",tile.x,tile.y)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

customizable.placedirt = function()
    local param = getBot():getWorld().name
    for tilex = 35, 50 do
        getBot():findPath(tilex,17)
        sleep(30)
        customizable.reconnect(param,"",tilex,17)
        while getBot():getWorld():getTile(tilex,18).fg == 0 do
            getBot():place(tilex,18,2)
            sleep(200)
            customizable.reconnect(param,"",tilex,17)
        end
    end
end

customizable.dirts = function(amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for tiley = 19, 53, 1 do
        for tilex = 0, 6, 1 do
            if getBot():getWorld():getTile(tilex,tiley).fg == 2 then
                getBot():findPath(tilex,tiley - 1)
                sleep(30)
                customizable.reconnect(param,"",tilex,tiley - 1)
                while getBot():getWorld():getTile(tilex,tiley).fg ~= 0 do
                    getBot():hit(tilex,tiley)
                    sleep(200)
                    customizable.reconnect(param,"",tilex,tiley - 1)
                end
                attempt = attempt + 1
            end
            if attempt >= amount then
                break
            end
        end
        if attempt >= amount then
            break
        end
    end
end

customizable.findDirt = function(amount)
    local param = getBot():getWorld().name
    for tiley = 19, 53, 1 do
        for tilex = 0, 6, 1 do
            if getBot():getWorld():getTile(tilex,tiley).fg ~= 0 then
                getBot():findPath(tilex,tiley - 1)
                sleep(30)
                customizable.reconnect(param,"",tilex,tiley - 1)
                while getBot():getWorld():getTile(tilex,tiley).fg ~= 0 do
                    getBot():hit(tilex,tiley)
                    sleep(200)
                    customizable.reconnect(param,"",tilex,tiley - 1)
                end
            end
            if getBot():getInventory():getItemCount(3) >= amount then
                break
            end
        end
        if getBot():getInventory():getItemCount(3) >= amount then
            break
        end
    end
end

customizable.placeWood = function()
    local param = getBot():getWorld().name
    for tilex = 35, 56 do
        getBot():findPath(tilex,14)
        sleep(30)
        customizable.reconnect(param,"",tilex,14)
        while getBot():getWorld():getTile(tilex,15).fg == 0 do
            getBot():place(tilex,15,100)
            sleep(200)
            customizable.reconnect(param,"",tilex,14)
        end
    end
end

customizable.breakWood = function()
    local param = getBot():getWorld().name
    for tilex = 35, 56 do
        getBot():findPath(tilex,14)
        sleep(30)
        customizable.reconnect(param,"",tilex,14)
        while getBot():getWorld():getTile(tilex,15).fg ~= 0 do
            getBot():hit(tilex,15)
            sleep(200)
            customizable.reconnect(param,"",tilex,14)
        end
        if getBot():getInventory():getItemCount(101) > 4 then
            break
        end
    end
end

customizable.planting = function(tree,amount)
    local param = getBot():getWorld().name
    local attempt = 0
    for tilex = 35, 50 do
        if getBot():getWorld():getTile(tilex,17).fg == 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            customizable.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg == 0 do
                getBot():place(tilex,17,tree)
                sleep(200)
                customizable.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

customizable.ttree = function(tree)
    local attempt = 0
    local param = getBot():getWorld().name
    for tilex = 35, 50 do
        if getBot():getWorld():getTile(tilex,17).fg ~= 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            customizable.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg ~= 0 do
                getBot():hit(tilex,17)
                sleep(200)
                customizable.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= 10 then
            break
        end
    end
end

customizable.splice = function(item1,item2,amount)
    local attempt = 0
    local param = getBot():getWorld().name
    for tilex = 35, 45 do
        if getBot():getWorld():getTile(tilex,17).fg == 0 then
            getBot():findPath(tilex,17)
            sleep(30)
            customizable.reconnect(param,"",tilex,17)
            while getBot():getWorld():getTile(tilex,17).fg == 0 do
                getBot():place(tilex,17,item1)
                sleep(200)
                customizable.reconnect(param,"",tilex,17)
            end
            while getBot():getWorld():getTile(tilex,17).fg == item1 do
                getBot():place(tilex,17,item2)
                sleep(200)
                customizable.reconnect(param,"",tilex,17)
            end
            attempt = attempt + 1
        end
        if attempt >= amount then
            break
        end
    end
end

customizable.breakBlock = function(id,target)
    local param = getBot():getWorld().name
    while getBot():getInventory():getItemCount(id+1) < target do
        while getBot():getWorld():getTile(getBot().x,getBot().y-1).fg == 0 do
            getBot():place(getBot().x,getBot().y-1,id)
            sleep(210)
            customizable.reconnect(param,"",getBot().x,getBot().y)
        end
        while getBot():getWorld():getTile(getBot().x,getBot().y-1).fg ~= 0 do
            getBot():hit(getBot().x,getBot().y-1)
            sleep(210)
            customizable.reconnect(param,"",getBot().x,getBot().y)
        end
        sleep(500)
    end
end

customizable.randomletter = function()
    local letters = ""
    local function stringRandom()
        local random = math.random(1,3)
        if random == 1 then
            return string.char(math.random(97,122))
        elseif random == 2 then
            return string.char(math.random(65,90))
        else
            return string.char(math.random(48,57))
        end
    end
    for i = 1, letter do
        letters = letters..stringRandom()
    end
    return letters
end

customizable.algorithm = function()
    getBot().collect_range = 3
    getBot().collect_interval = 200
    getBot().object_collect_delay = 110
    getBot().auto_collect = true
    customizable.webhookinfo()
    for _, tile in pairs(getBot():getWorld():getTiles()) do
        if tile.fg == 11 and tile:canHarvest() then
            customizable.htree(3,5)
            sleep(200)
            customizable.placedirt()
            sleep(200)
            customizable.dirts(20)
            sleep(200)
            customizable.findDirt(11)
            customizable.planting(3,10)
            sleep(31000)
            customizable.ttree(3)
            sleep(200)
            customizable.htree(11,10)
            sleep(200)
            for i = 1,5 do
                getBot():drop(11,200)
                sleep(2000)
            end
            sleep(200)
            customizable.htree(5,9)
            sleep(200)
            customizable.breakBlock(4,10)
            sleep(200)
            customizable.findDirt(12)
            sleep(200)
            customizable.splice(3,5,10)
            sleep(68000)
            customizable.ttree(101)
            sleep(200)
            customizable.placeWood()
            sleep(200)
            customizable.breakWood()
            sleep(200)
            customizable.splice(101,3,1)
            sleep(122000)
            getBot():hit(getBot().x,getBot().y)
            sleep(1000)
        end
    end
    getBot().auto_collect = false
end

customizable.hookworld = function(var, netid)
    if var:get(0):getString() == "OnDialogRequest" then
        if var:get(1):getString():find("myWorldsUiTab") then
            getBot():warp(var:get(1):getString():match("add_button|(%w+)|"))
            sleep(5000)
        end
    end
end

customizable.mainscript = function()
    while getBot():getInventory():getItemCount(9640) > 0 do
        customizable.warp(customizable.randomletter(),"",5000)
        while getTile(getBot().x,getBot().y - 1).fg ~= 9640 do
            customizable.put(9640,0,-1)
            sleep(delayplace)
        end
    end
    if takepickaxe then
        while getBot():getInventory():getItemCount(98) == 0 do
            customizable.takepickaxe()
            sleep(6000)
        end
    end
    if autoSkipQuest then
        ::failed::
        while not getBot():isInWorld() do
            customizable.warp(getBot().name,"",5000)
        end
        addEvent(Event.variantlist, customizable.hookworld)
        runThread(function()
            getBot():sendPacket(2, "action|wrench\n|netid|"..getLocal().netid)
            sleep(1000)
            getBot():sendPacket(2, "action|dialog_return\ndialog_name|popup\nnetID|"..getLocal().netid.."|\nbuttonClicked|my_worlds")
            sleep(1000)
        end)    
        listenEvents(5)
        if getBot():isInWorld("EXIT") then
            goto failed
        end
        customizable.algorithm()
    end
    if getBot():getInventory():getItemCount(block) >= pnbtile then
        customizable.line()
    else
        customizable.take()
    end
end

if Information == "Script PNB made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq" and scriptVersion == "0.2" then
    customizable.setauth()
    if autologin and not pcallBot then
        customizable.main()
    end
    while getBot().status ~= BotStatus.online do
        getBot():connect()
        sleep(delayreconnect)
    end
    sleep(delayexecute * pcallBot)
    if withgaut then
        if pcallBot == 1 or pcallBot == 2 then
            customizable.setposition()
            while true do
                if pcallBot == 1 then
                    getBot():findPath(customizable.tileUtX,customizable.tileUtY)
                    getBot():setDirection(false)
                    sleep(1000)
                    getBot():retrieve(getBot().x,getBot().y+1,200)
                    sleep(delayretrieve)
                    customizable.storingretrieve()
                    customizable.reconnect(world,door,customizable.tileUtX,customizable.tileUtY)
                elseif pcallBot == 2 then
                    getBot():findPath(customizable.tileGaiaX,customizable.tileGaiaY)
                    getBot():setDirection(false)
                    sleep(1000)
                    getBot():retrieve(getBot().x,getBot().y+1,200)
                    sleep(delayretrieve)
                    customizable.storingretrieve()
                    customizable.reconnect(world,door,customizable.tileGaiaX,customizable.tileGaiaY)
                end
            end
        end
    end
    customizable.mainscript()
else
    print("Script PNB made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
    customizable.botinfo("Script PNB made by Caramoy's Syndicate, Link Discord : https://discord.com/invite/fTTKW8vvuq")
end
